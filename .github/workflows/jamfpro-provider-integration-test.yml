name: "Terraform Integration Tests"
run-name: "Terraform Integration Tests"
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  Run-Integration-Test:
    environment: terraform-integration-testing
    runs-on: ubuntu-latest
    concurrency:
      group: sandbox_interfacing_testing_environment
      cancel-in-progress: false
    steps:
      - name: Get User Permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
      
      - name: Check User Permission
        if: steps.checkAccess.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo. A maintainer must manually trigger this after review."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1

      - name: Checkout Terraform Repository
        uses: actions/checkout@v4
        with:
          repository: deploymenttheory/terraform-provider-jamfpro
          ref: ${{ github.event.pull_request.head.sha }}
          path: terraform-provider-jamfpro

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Set up Golang
        uses: actions/setup-go@v5

      - name: Set up Python
        uses: actions/setup-python@v5.5.0

      - name: Set up Python Environment
        run: |
          pip install -r ./terraform-provider-jamfpro/testing/requirements.txt
      - name: Compile Provider
        run: |
          cd ./terraform-provider-jamfpro
          mkdir -p ~/.terraform.d/plugins/terraform.local/local/jamfpro/0.1.0/linux_amd64/
          go build
          mv ./terraform-provider-jamfpro ~/.terraform.d/plugins/terraform.local/local/jamfpro/0.1.0/linux_amd64/
          chmod +x ~/.terraform.d/plugins/terraform.local/local/jamfpro/0.1.0/linux_amd64/terraform-provider-jamfpro
          cd testing
          terraform init

      - name: Generate UUID
        id: generate-uuid
        run: |
          generated_uuid=$(uuidgen)
          echo "uuid=$generated_uuid" >> $GITHUB_OUTPUT
          echo "Run ID: $generated_uuid"

        
      - name: Build TFVARS File
        run: |
          if [[ "x${{ secrets.TESTING_CLIENT_ID }}" == "xval" ]]; then
            echo "Access to secrets"
          else
            echo "No access to secrets"
            exit 1
          fi
          cd ./terraform-provider-jamfpro/testing
          cat <<EOF > terraform.tfvars
          jamfpro_instance_fqdn="${{ secrets.TESTING_JAMFPRO_INSTANCE_FQDN }}"
          jamfpro_auth_method="oauth2"
          jamfpro_client_id="${{ secrets.TESTING_CLIENT_ID }}"
          jamfpro_client_secret="${{ secrets.TESTING_CLIENT_SECRET }}"
          jamfpro_token_refresh_buffer_period_seconds="30"
          jamfpro_mandatory_request_delay_milliseconds="100"
          testing_id="${{ steps.generate-uuid.outputs.uuid }}"
          EOF
      
      - name: Build .env File
        run: |
          cd ./terraform-provider-jamfpro/testing/jamfpy
          cat <<EOF > .env
          CLIENT_ID="${{ secrets.TESTING_CLIENT_ID }}"
          CLIENT_SEC="${{ secrets.TESTING_CLIENT_SECRET }}"
          EOF

      - name: Scaffolding
        run: |
          echo "PLEASE NOTE at 23:59 a wipe job is performed on all testing objects. Tests run at this time will most likely fail."
          cd ./terraform-provider-jamfpro/testing/setup
          ./scaffolding.sh -r ${{ steps.generate-uuid.outputs.uuid }}

      - name: Run Tests
        run: |  
          cd ./terraform-provider-jamfpro/testing
          terraform fmt
          terraform init
          terraform test

      - name: Post-flight cleanup
        run: |
          # Waits 5 seconds to allow for deletes to properly apply after test.
          sleep 5
          cd ./terraform-provider-jamfpro/testing/setup
          ./cleanup.sh -r ${{ steps.generate-uuid.outputs.uuid }}


      - name: Diff cascade - Terraform Plan (Pre-Apply)
        id: plan_pre
        run: |
          cd ./terraform-provider-jamfpro/testing
          chmod +x ./diff_cascade_check.sh
          ./diff_cascade_check.sh
          