name: PR | Title Validation

on:
  pull_request_target:
    types: [opened, edited, synchronize, opened]

jobs:
  validate-title:
    name: 'Validate Title'
    runs-on: ubuntu-latest

    steps:
      - name: Run Check Script
        working-directory: .
        run: |
          VALID_PREFIXES=(
            "feat"
            "fix"
            "chore"
            "docs"
            "style"
            "refactor"
            "perf"
            "test"
            "build"
            "ci"
            "revert"
          )

          PR_NAME="${{ github.event.pull_request.title }}"

          if [[ -z "$PR_NAME" ]]; then
            echo "❌ PR name is empty"
            exit 1
          fi

          for prefix in "${VALID_PREFIXES[@]}"; do
            # Accepts: prefix: ... or prefix(scope): ...
            if [[ "$PR_NAME" =~ ^${prefix}(:|\([a-zA-Z0-9_-]+\):)\ *(.*) ]]; then
              SCOPE_MATCH="${BASH_REMATCH[1]}"
              TITLE="${BASH_REMATCH[3]}"
              # Check for empty scope (e.g., feat(): ...)
              if [[ "$SCOPE_MATCH" =~ ^\(\):$ ]]; then
                echo "❌ Scope must not be empty. Use format: '${prefix}(scope): ...' or '${prefix}: ...'"
                exit 1
              fi
              TITLE_LENGTH=${#TITLE}
              if (( TITLE_LENGTH < 6 )); then
                echo "❌ PR title after '${prefix}${SCOPE_MATCH}' is too short (found: '${TITLE}'). Must be at least 6 characters."
                exit 1
              fi
              echo "✅ Valid PR name: '${prefix}${SCOPE_MATCH} ${TITLE}'"
              exit 0
            elif [[ "$PR_NAME" =~ ^${prefix}[[:space:]] ]]; then
              echo "❌ Found '${prefix}' but missing colon. Use format: '${prefix}: ...' or '${prefix}(scope): ...'"
              exit 1
            fi
          done

          echo "❌ Invalid PR name prefix. Use one of: ${VALID_PREFIXES[*]}"
          exit 1