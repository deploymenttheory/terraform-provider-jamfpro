# Description: This pipeline maintains accurate Jamf Pro API privilege data across different versions.
# It automatically fetches and validates the complete set of available API privileges from a running
# Jamf Pro instance by:
# 1. Fetching the complete list of API privileges using the Jamf Pro API
# 2. Storing these privileges within the apirole tf resource as a JSON file for lookup.
#
# This automation ensures that:
# - The Terraform provider can accurately validate API privilege assignments
# - API privilege validation stays in sync with Jamf Pro version updates
# - Breaking changes in API privileges between versions are tracked
# - Administrators can confidently assign correct API privileges through Terraform
# - API privilege changes are documented through version control
name: Jamf Pro Api Privileges Maintenance

on:
  schedule:
    - cron: '0 0 * * 0'  # Run every Sunday at midnight UTC
  workflow_dispatch:     # Allow manual triggering

permissions:
  contents: write
  pull-requests: write   # Needed to create a pull request

jobs:
  update-api-privileges:
    runs-on: ubuntu-latest
    steps:
      
    - name: Harden Runner
      uses: step-security/harden-runner@v2.10.2
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@v4.2.2

    - name: Set up Go
      uses: actions/setup-go@v5.0.2
      with:
        go-version: '1.22.4'  # current version used by the go-api-sdk-jamfpro package

    - name: Harden Runner
      uses: step-security/harden-runner@v2.10.2
      with:
        egress-policy: audit

    - name: Install dependencies
      run: |
        go mod download
        go get github.com/deploymenttheory/go-api-sdk-jamfpro/sdk/jamfpro

    - name: Run Api Privileges Fetcher
      env:
        LOG_LEVEL: "debug"
        HIDE_SENSITIVE_DATA: "true"
        INSTANCE_DOMAIN: ${{ secrets.MAINTAINENCE_INSTANCE_DOMAIN }}
        AUTH_METHOD: "oauth2"
        CLIENT_ID: ${{ secrets.MAINTAINENCE_CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.MAINTAINENCE_CLIENT_SECRET }}
        EXPORT_LOGS: "false"
        JAMF_LOAD_BALANCER_LOCK: "true"
        MAX_RETRY_ATTEMPTS: "3"
        ENABLE_DYNAMIC_RATE_LIMITING: "false"
        MAX_CONCURRENT_REQUESTS: "1"
        TOKEN_REFRESH_BUFFER_PERIOD_SECONDS: "300"
        TOTAL_RETRY_DURATION_SECONDS: "60"
        CUSTOM_TIMEOUT_SECONDS: "60"
        FOLLOW_REDIRECTS: "true"
        MAX_REDIRECTS: "5"
        ENABLE_CONCURRENCY_MANAGEMENT: "true"
        CUSTOM_COOKIES: ""
        MANDATORY_REQUEST_DELAY_MILLISECONDS: "0"
        RETRY_ELIGIABLE_REQUESTS: "true"
      run: |
        echo "Current working directory: $(pwd)"
    
        SCRIPT_DIR="$GITHUB_WORKSPACE/scripts/maintainence/GetJamfAPIPrivileges"
        if [ -d "$SCRIPT_DIR" ]; then
          cd "$SCRIPT_DIR"
          echo "Changed directory to: $(pwd)"
          if [ -f "GetJamfAPIPrivileges.go" ]; then
            go run GetJamfAPIPrivileges.go
          else
            echo "Error: GetJamfAPIPrivileges.go not found in $SCRIPT_DIR"
            exit 1
          fi
        else
          echo "Error: Directory $SCRIPT_DIR does not exist"
          exit 1
        fi

        TARGET_DIR="$GITHUB_WORKSPACE/internal/resources/apiroles"
        if [ ! -d "$TARGET_DIR" ]; then
          mkdir -p "$TARGET_DIR"
          echo "Created directory: $TARGET_DIR"
        else
          echo "Directory already exists: $TARGET_DIR"
        fi
        
        if [ -f "api_privileges.json" ]; then
          mv api_privileges.json "$TARGET_DIR/"
          echo "JSON file moved to $TARGET_DIR/api_privileges.json"
        else
          echo "Error: api_privileges.json not found"
          exit 1
        fi

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v7.0.5
      with:
        commit-message: Update Api Privileges data for Jamf Pro Version ${{ env.VERSION_DIR }}
        title: '[Automated] Update Api Privileges data for Jamf Pro Version ${{ env.VERSION_DIR }}'
        body: |
          This is an automated PR to update the Api privileges for Jamf Pro Version ${{ env.VERSION_DIR }}.
          Please review the changes in the api_privileges.json file.
        branch: update-api-privileges-${{ env.VERSION_DIR }}
        delete-branch: true