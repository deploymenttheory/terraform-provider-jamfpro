version: "2"

run:
  timeout: 5m
  # CI mode: Fails if go.mod needs updates, ensuring dependencies are properly declared
  modules-download-mode: readonly
  allow-parallel-runners: true
  allow-serial-runners: false
  concurrency: 2


linters:
  default: none
  enable:
    - govet
    - staticcheck
    - errcheck
    - unused
    - ineffassign
  
    # error-handling best practices
    - errorlint      # flag missing %w wraps
    - err113         # enforce correct error-handling patterns

    # Terraform‐specific safety & resource handling
    - bodyclose      # makes sure every HTTP response body is closed
    - gosec          # scans for security issues (e.g. hardcoded credentials)
    
    # Specifically important for API clients (Microsoft 365 API)
    - contextcheck   # check whether function uses a non-inherited context
    - noctx          # finds sending http request without context.Context
    - nilnil         # checks that there is no simultaneous return of nil error and invalid value
    
    # Quality & style
    - gocritic       # catches a variety of performance/style bugs
    - prealloc       # recommends when you can preallocate slices/maps
    - misspell       # finds typos in comments, docs, & variable names
    - gocyclo        # warn on high cyclomatic complexity
    - wrapcheck      # checks that errors from external packages are wrapped
    
    # API/Terraform specific
    - musttag        # enforce field tags in (un)marshaled structs

  # 3) Per-linter configuration
  settings:
    nakedret:
      max-func-lines: 40

  # 4) Issue-filtering (not disabling analysis, just silencing reports)
formatters:
  # Only run the formatters you actually want to auto‐fix in CI
  enable:
    - gofumpt     # strict Go formatting (superset of gofmt)
    - goimports   # fixes imports (add/remove/sort)
    - gci         # groups & sorts import blocks
    - golines     # wraps long lines to a max length (e.g. 120 chars)

  # Per‐formatter settings (optional—only if you need to tweak defaults)
  settings:
    gci:
      # customize your import sections order: standard, external, project
      sections:
        - Standard
        - Default
        - Prefix(github.com/deploymenttheory)

  # Exclude generated or special‐case files from formatting checks
  exclusions:
    warn-unused: true   # error if any of the below rules never match
    generated: strict   # only skip files with exact "// Code generated ... DO NOT EDIT."
    paths:
      - ".*\\.gen\\.go$"       # ignore any *.gen.go files
      - "internal/tools/.*"    # ignore codegen tools dir

output:
  formats:
    # 1) Text format for the Action log
    text:
      # Send lint results to stderr so the Action log shows them even when piped
      path: stderr
      # Include the linter name after each issue
      print-linter-name: true
      # Show the source lines for each issue
      print-issued-lines: true
      # Keep ANSI colors enabled for readability in the Actions console
      colors: true

    # 2) SARIF format for GitHub Code Scanning integration
    sarif:
      path: golangci-lint-report.sarif

  # Use relative paths (from the module root) in output
  path-mode: ""

  sort-order:
    - severity
    - file

  # Show summary statistics at the end of the report
  show-stats: true